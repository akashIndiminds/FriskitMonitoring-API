{
  "info": {
    "name": "Dynamic Log Analyzer API",
    "description": "Complete API collection for Dynamic Log Analyzer - Universal log analysis system for network and local paths",
    "version": "2.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "networkPath",
      "value": "\\\\\\\\db-indiminds\\\\C\\\\Friskit\\\\BAT-Files\\\\latest\\\\logs\\\\Frisk-UI",
      "type": "string"
    },
    {
      "key": "localPath",
      "value": "C:\\\\logs",
      "type": "string"
    },
    {
      "key": "fileName",
      "value": "app.log",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîß Health & Info",
      "item": [
        {
          "name": "Server Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "API Information",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/info",
              "host": ["{{baseUrl}}"],
              "path": ["info"]
            }
          },
          "response": []
        },
        {
          "name": "Recent Paths Service Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/recent/health",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "recent", "health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÅ Core Log Operations",
      "item": [
        {
          "name": "Read Log File - Network Path",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\",\n  \"limit\": 100,\n  \"offset\": 0,\n  \"level\": \"ERROR\",\n  \"userInfo\": \"developer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/files",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "files"]
            }
          },
          "response": []
        },
        {
          "name": "Read Log File - Local Path",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filePath\": \"{{localPath}}\",\n  \"fileName\": \"{{fileName}}\",\n  \"limit\": 50,\n  \"offset\": 0,\n  \"userInfo\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/files",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "files"]
            }
          },
          "response": []
        },
        {
          "name": "Browse Directory Files",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"directoryPath\": \"{{networkPath}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/directory",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "directory"]
            }
          },
          "response": []
        },
        {
          "name": "Search in Logs",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\",\n  \"searchQuery\": \"error\",\n  \"level\": \"ERROR\",\n  \"limit\": 100,\n  \"caseSensitive\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/search",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "search"]
            }
          },
          "response": []
        },
        {
          "name": "Get File Statistics",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/stats",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "Get Latest Logs (Real-time)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\",\n  \"lastTimestamp\": \"2025-09-01T10:30:00\",\n  \"limit\": 50\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/latest",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "latest"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üìÖ Date-Based Operations",
      "item": [
        {
          "name": "Get Logs by Specific Date",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"directoryPath\": \"{{networkPath}}\",\n  \"date\": \"2025-09-01\",\n  \"limit\": 100,\n  \"offset\": 0,\n  \"level\": \"ERROR\",\n  \"userInfo\": \"developer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/by-date",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "by-date"]
            }
          },
          "response": []
        },
        {
          "name": "Get Available Dates in Directory",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"directoryPath\": \"{{networkPath}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/available-dates",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "available-dates"]
            }
          },
          "response": []
        },
        {
          "name": "Get Logs by Date Range",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"directoryPath\": \"{{networkPath}}\",\n  \"startDate\": \"2025-09-01\",\n  \"endDate\": \"2025-09-05\",\n  \"limit\": 500,\n  \"level\": \"ERROR\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/date-range",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "date-range"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üíæ Recent Paths Management",
      "item": [
        {
          "name": "Get Recent Paths (‚úÖ Fixed)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/recent",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "recent"]
            }
          },
          "response": []
        },
        {
          "name": "Get Popular Paths",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/popular",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "popular"]
            }
          },
          "response": []
        },
        {
          "name": "Get Path History",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/history",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "history"]
            }
          },
          "response": []
        },
        {
          "name": "Search Recent Paths",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/search-recent?query=frisk",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "search-recent"],
              "query": [
                {
                  "key": "query",
                  "value": "frisk"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Clear All Recent Paths",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/recent",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "recent"]
            }
          },
          "response": []
        },
        {
          "name": "Remove Specific Recent Path",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/recent/{{networkPath}}\\\\{{fileName}}",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "recent", "{{networkPath}}\\\\{{fileName}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üîç Storage Management & Debugging",
      "item": [
        {
          "name": "Get Storage Statistics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/storage/stats",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "storage", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "üìÅ View JSON Storage File Contents",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/storage/contents",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "storage", "contents"]
            }
          },
          "response": []
        },
        {
          "name": "Create Storage Backup",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/storage/backup",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "storage", "backup"]
            }
          },
          "response": []
        },
        {
          "name": "Cleanup Old Entries (30 days)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/logs/storage/cleanup?days=30",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "storage", "cleanup"],
              "query": [
                {
                  "key": "days",
                  "value": "30"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üß™ Testing Workflows",
      "item": [
        {
          "name": "üîÑ Complete Test Workflow",
          "item": [
            {
              "name": "1. Health Check",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/health",
                  "host": ["{{baseUrl}}"],
                  "path": ["health"]
                }
              }
            },
            {
              "name": "2. Check Recent Paths (Initially Empty)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/logs/recent",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "recent"]
                }
              }
            },
            {
              "name": "3. Read Log File (This Stores Path)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filePath\": \"C:\\\\Windows\\\\System32\\\\LogFiles\",\n  \"fileName\": \"httperr1.log\",\n  \"limit\": 10,\n  \"userInfo\": \"test-user\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/logs/files",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "files"]
                }
              }
            },
            {
              "name": "4. Check Recent Paths Again (Should Have Data)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/logs/recent",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "recent"]
                }
              }
            },
            {
              "name": "5. View Storage File Contents",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/logs/storage/contents",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "storage", "contents"]
                }
              }
            }
          ]
        },
        {
          "name": "üåê Network Path Test",
          "item": [
            {
              "name": "Test Frisk UI Logs",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filePath\": \"\\\\\\\\db-indiminds\\\\C\\\\Friskit\\\\BAT-Files\\\\latest\\\\logs\\\\Frisk-UI\",\n  \"fileName\": \"app.log\",\n  \"limit\": 20,\n  \"userInfo\": \"frisk-developer\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/logs/files",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "files"]
                }
              }
            },
            {
              "name": "Test Frisk API Logs",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filePath\": \"\\\\\\\\db-indiminds\\\\C\\\\Friskit\\\\BAT-Files\\\\latest\\\\logs\\\\Frisk-API\",\n  \"fileName\": \"api.log\",\n  \"limit\": 20,\n  \"userInfo\": \"frisk-developer\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/logs/files",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "files"]
                }
              }
            },
            {
              "name": "Browse Frisk Log Directory",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"directoryPath\": \"\\\\\\\\db-indiminds\\\\C\\\\Friskit\\\\BAT-Files\\\\latest\\\\logs\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/logs/directory",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "directory"]
                }
              }
            }
          ]
        },
        {
          "name": "üîç Error Analysis Test",
          "item": [
            {
              "name": "Search for Exceptions",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\",\n  \"searchQuery\": \"exception\",\n  \"level\": \"ERROR\",\n  \"limit\": 50\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/logs/search",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "search"]
                }
              }
            },
            {
              "name": "Search for Timeouts",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\",\n  \"searchQuery\": \"timeout\",\n  \"level\": \"WARNING\",\n  \"caseSensitive\": false\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/logs/search",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "search"]
                }
              }
            },
            {
              "name": "Get Error Statistics",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/logs/stats",
                  "host": ["{{baseUrl}}"],
                  "path": ["logs", "stats"]
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üìä Advanced Use Cases",
      "item": [
        {
          "name": "Monitor Live Logs",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\",\n  \"lastTimestamp\": \"{{$timestamp}}\",\n  \"limit\": 25\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/latest",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "latest"]
            }
          }
        },
        {
          "name": "Get Today's Logs",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"directoryPath\": \"{{networkPath}}\",\n  \"date\": \"{{$isoTimestamp}}\",\n  \"limit\": 200\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/by-date",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "by-date"]
            }
          }
        },
        {
          "name": "Weekly Log Analysis",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"directoryPath\": \"{{networkPath}}\",\n  \"startDate\": \"2025-08-25\",\n  \"endDate\": \"2025-09-01\",\n  \"limit\": 1000,\n  \"level\": \"ERROR\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/date-range",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "date-range"]
            }
          }
        },
        {
          "name": "Critical Error Search",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"filePath\": \"{{networkPath}}\",\n  \"fileName\": \"{{fileName}}\",\n  \"searchQuery\": \"critical|fatal|crash\",\n  \"limit\": 100,\n  \"caseSensitive\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logs/search",
              "host": ["{{baseUrl}}"],
              "path": ["logs", "search"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-generate current timestamp for date-based requests",
          "pm.globals.set('currentDate', new Date().toISOString().split('T')[0]);",
          "",
          "// Set common headers",
          "pm.request.headers.add({",
          "  key: 'User-Agent',",
          "  value: 'Dynamic-Log-Analyzer-Postman/2.0.0'",
          "});"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test for all requests",
          "pm.test('Response time is reasonable', function () {",
          "  pm.expect(pm.response.responseTime).to.be.below(10000);",
          "});",
          "",
          "pm.test('Content-Type is JSON', function () {",
          "  pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// Test success responses",
          "if (pm.response.code === 200) {",
          "  pm.test('Success response format', function () {",
          "    const jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('success', true);",
          "    pm.expect(jsonData).to.have.property('timestamp');",
          "  });",
          "}",
          "",
          "// Test error responses  ",
          "if (pm.response.code >= 400) {",
          "  pm.test('Error response format', function () {",
          "    const jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('success', false);",
          "    pm.expect(jsonData).to.have.property('error');",
          "    pm.expect(jsonData).to.have.property('timestamp');",
          "  });",
          "}"
        ]
      }
    }
  ]
}